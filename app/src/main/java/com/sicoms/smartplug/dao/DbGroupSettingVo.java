package com.sicoms.smartplug.dao;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table tb_group_setting.
 */
public class DbGroupSettingVo {

    private Long groupId;
    private String setId;
    /** Not-null value. */
    private String setVal;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient DbGroupSettingVoDao myDao;

    private DbGroupVo dbGroupVo;
    private Long dbGroupVo__resolvedKey;


    public DbGroupSettingVo() {
    }

    public DbGroupSettingVo(String setId) {
        this.setId = setId;
    }

    public DbGroupSettingVo(Long groupId, String setId, String setVal) {
        this.groupId = groupId;
        this.setId = setId;
        this.setVal = setVal;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getDbGroupSettingVoDao() : null;
    }

    public Long getGroupId() {
        return groupId;
    }

    public void setGroupId(Long groupId) {
        this.groupId = groupId;
    }

    public String getSetId() {
        return setId;
    }

    public void setSetId(String setId) {
        this.setId = setId;
    }

    /** Not-null value. */
    public String getSetVal() {
        return setVal;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSetVal(String setVal) {
        this.setVal = setVal;
    }

    /** To-one relationship, resolved on first access. */
    public DbGroupVo getDbGroupVo() {
        Long __key = this.groupId;
        if (dbGroupVo__resolvedKey == null || !dbGroupVo__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            DbGroupVoDao targetDao = daoSession.getDbGroupVoDao();
            DbGroupVo dbGroupVoNew = targetDao.load(__key);
            synchronized (this) {
                dbGroupVo = dbGroupVoNew;
            	dbGroupVo__resolvedKey = __key;
            }
        }
        return dbGroupVo;
    }

    public void setDbGroupVo(DbGroupVo dbGroupVo) {
        synchronized (this) {
            this.dbGroupVo = dbGroupVo;
            groupId = dbGroupVo == null ? null : dbGroupVo.getGroupId();
            dbGroupVo__resolvedKey = groupId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
